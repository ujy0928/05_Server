<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="https://jakarta.ee/xml/ns/jakartaee" xsi:schemaLocation="https://jakarta.ee/xml/ns/jakartaee https://jakarta.ee/xml/ns/jakartaee/web-app_6_0.xsd" id="WebApp_ID" version="6.0">
  
  <!--  
  	XML (eXtensible Markup Language) 파일은
  	데이터를 구조화하고 저장하기 위한 마크업 언어 파일
  	프로그램/어플리케이션의 설정 정보를 저장하는데 사용
  	데이터 교환 및 저장을 위해서도 사용됨.
  	html 파일처럼 태그로 이루어져 있다.
  	
  	web.xml (배포 서술자)
  	Server가 켜지자마자 프로그램 파일 중 제일 처음 읽는 문서
  -->
  
  
  <display-name>ServletProject</display-name>
  
  <!-- 메인페이지로 사용할 파일명 목록 (webapp 폴더에 파일 생성해야함) -->
  <!-- 이 목록에 있는 파일을 순서대로 탐색하여 찾아나감. 일치하는 파일을 메인페이지로 지정함. 
  		업으면 404 오류를 반환
  -->
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.jsp</welcome-file>
    <welcome-file>default.htm</welcome-file>
  </welcome-file-list>
  
  <!-- 특정 클래스를 Servlet으로 등록하고 이름을 지정하는 태그 -->
  <servlet>
  	<!-- 등록할 Servlet을 지칭할 명칭(별칭) -->
  	<servlet-name>ex1</servlet-name>
  	
  	<!-- Servlet으로 등록할 클래스의 패키지명+클래스명 -->
  	<servlet-class>edu.kh.servlet.controller.ExampleController1</servlet-class>
  </servlet>
  
  <!-- 요청 주소를 처리할 Servlet을 연결 -->
  <servlet-mapping>
  	<!-- 등록할 Servlet을 지칭할 명칭 -->
  	<servlet-name>ex1</servlet-name>
  	
  	<!-- 연결할 요청 주소 -->
 	<url-pattern>/example1</url-pattern> 
  </servlet-mapping>
  
</web-app>